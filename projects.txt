# AQI Dashboard

A real-time air quality monitoring dashboard built with React that provides comprehensive environmental data visualization and analysis. The application features an interactive map interface displaying air quality metrics across different locations.

##GITHUB:https://github.com/aqihub/aqi-dashboard
##LIVELINK:https://dashboard.aqi.co.in/

### Key Features:
- Real-time AQI (Air Quality Index) monitoring with color-coded indicators
- Interactive map visualization using React-Leaflet
- Multiple data layers including temperature, humidity, PM2.5, TVOC, and eCO2 readings
- AI-powered chatbot assistant for air quality information
- Dark/Light mode with automatic time-based theme switching
- PWA support for offline functionality
- Leaderboard system tracking air quality improvements and user engagement
- Location-based search with postal code support
- Responsive design optimized for both desktop and mobile devices

### Technical Stack:
- React 18
- Tailwind CSS
- Leaflet Maps
- Vite
- PWA (Progressive Web App)
- OpenStreetMap API
- Real-time data integration

The dashboard serves as a comprehensive tool for monitoring and understanding air quality metrics, making environmental data accessible and actionable for users.

# Vide Digital Technologies Website

A modern, responsive corporate website built with React, TypeScript, and Vite for a global digital marketing and technology solutions provider. The site features sophisticated animations, SEO optimization, and comprehensive digital service offerings.

##GITHUB:https://github.com/Vide-Digital-Technologies/VideDigitalTechnologies-Website
##LIVELINK:https://vide-digital.netlify.app/

### Key Features:
- Responsive design with Tailwind CSS
- Animated UI components using Framer Motion
- SEO-optimized with React Helmet
- Dynamic page routing
- Interactive contact forms with EmailJS
- Global state management
- Performance-optimized build configuration
- Comprehensive meta-data management
- Social media integration
- Testimonials carousel
- Back-to-top functionality
- Multi-section layout components

### Technical Stack:
- React 18
- TypeScript
- Vite
- Tailwind CSS
- Framer Motion
- React Router DOM
- React Helmet Async
- EmailJS Integration
- React Icons
- ESLint Configuration
- PostCSS Processing
- Netlify Deployment

The website demonstrates modern web development practices with a focus on performance, accessibility, and user experience. It includes sophisticated animations, SEO best practices, and optimized build configurations for production deployment.

This project showcases expertise in modern frontend development, TypeScript implementation, and enterprise-level web application architecture.



# Decentralized AI-Powered Prediction Market

A blockchain-based prediction market platform that combines decentralized finance (DeFi) with AI-powered analysis to create a transparent and intelligent betting system for cryptocurrency price predictions.

##GITHUB:https://github.com/manish2889/decentralized-prediction-market
##LIVELINK:https://decentralized-prediction-market.vercel.app/

### Key Features:
- Smart contract-based prediction markets using Ethereum blockchain
- Real-time cryptocurrency price feeds via Chainlink oracles
- AI-powered market analysis for informed decision making
- Interactive market creation and betting interface
- Automated reward distribution system
- Real-time ETH and BTC price tracking
- Transparent betting mechanism with smart contract security
- Metamask integration for Web3 functionality

### Technical Stack:
- React.js
- Solidity (Smart Contracts)
- Web3.js
- Chainlink Price Feeds
- Ethereum Network
- Tailwind CSS
- MetaMask Integration
- AI Analysis Engine

The platform enables users to create prediction markets, place bets on cryptocurrency price movements, and receive AI-generated analysis to make informed decisions. The system leverages blockchain technology for transparency and security while providing real-time market data through Chainlink oracles.

This project demonstrates the intersection of blockchain technology, artificial intelligence, and decentralized finance, creating a trustless and automated prediction market system.

# EtherTrendAI: Gas Price Predictor

A React-based web application that leverages AI technology to predict Ethereum gas prices, helping users optimize their transaction timing and costs on the Ethereum network.

##GITHUB:https://github.com/manish2889/ethertrendai-gas-predictor
##LIVELINK:https://ethertrendai-gas-predictor.vercel.app/

### Key Features:
- Real-time Ethereum gas price monitoring via Etherscan API
- AI-powered price predictions for multiple time horizons (1h, 6h, 12h, 24h)
- Interactive data visualization using Chart.js
- Detailed prediction breakdowns with confidence intervals
- Responsive design with Tailwind CSS
- Real-time price updates and trend analysis
- User-friendly interface with loading states and error handling

### Technical Stack:
- React.js
- Chart.js with react-chartjs-2
- Etherscan API Integration
- Tailwind CSS
- Axios for API handling
- Environment Variable Management
- AI Prediction Engine

The application provides users with current gas prices and forecasted trends, enabling them to make informed decisions about their Ethereum transactions. The intuitive interface combines real-time data with AI-driven predictions, presented through interactive charts and detailed breakdowns.

This project demonstrates expertise in frontend development, API integration, and the implementation of AI-powered features in a practical blockchain utility application.

# Web3 Chatbot

A React-based chatbot application that integrates with LLaMA AI to provide intelligent responses to Web3 and blockchain-related queries. The application features a modern, responsive interface with real-time message handling.

##GITHUB:https://github.com/manish2889/web3-chatbot
##LIVELINK:https://web3-chatbot.vercel.app/

### Key Features:
- Real-time chat interface with AI integration
- Message history management
- Auto-scrolling message view
- Loading state indicators
- Error handling and recovery
- Message threading
- User/Bot message differentiation
- Responsive design with Tailwind CSS
- API integration with LLaMA AI model
- Dynamic message formatting

### Technical Stack:
- React 18
- Axios for API Integration
- Tailwind CSS
- LLaMA AI API Integration
- Custom Hooks
- useRef for Scroll Management
- useState for State Management
- Error Boundary Implementation
- CSS Animations
- Responsive Design

The application provides an intuitive interface for users to interact with an AI chatbot specialized in Web3 topics. It features real-time message updates, smooth animations, and a polished user experience while maintaining high performance.

This project demonstrates expertise in frontend development, API integration, and AI implementation while showcasing modern React development practices and UI/UX design principles.


# Ethereum Block Analyzer with AI Integration

A Next.js-based web application that combines Ethereum blockchain data analysis with AI insights, providing detailed transaction analysis and intelligent interpretations of blockchain activity.


##GITHUB:https://github.com/manish2889/gaia-etherscan-ai-project
##LIVELINK:https://gaia-etherscan-ai-project.vercel.app/


### Key Features:
- Real-time Ethereum block data fetching via Etherscan API
- Detailed transaction analysis including:
  - Total transaction count
  - Total value calculations (Wei and ETH)
  - Block-specific metrics
- AI-powered insights using Gaia LLM integration
- Interactive block search functionality
- Real-time data processing and analysis
- Comprehensive error handling and validation
- Responsive design with Tailwind CSS

### Technical Stack:
- Next.js 14
- React 18
- Etherscan API Integration
- Gaia AI API (LLaMA Model)
- Tailwind CSS
- Axios for API Handling
- Environment Variable Management
- Custom Font Integration (Geist)

The application serves as a powerful tool for blockchain analysts and enthusiasts, providing both raw blockchain data and AI-interpreted insights. It demonstrates the integration of blockchain APIs with modern AI capabilities, all wrapped in a user-friendly interface.

This project showcases expertise in blockchain data handling, API integration, and the practical application of AI in blockchain analysis.

# TokenPulseAI: DeFi Token Price Predictor

An AI-powered DeFi analytics platform that provides real-time price predictions and market sentiment analysis for popular DeFi tokens, built with React and integrated with the LLaMA AI model.


##GITHUB:https://github.com/manish2889/tokenpulse-ai
##LIVELINK:https://tokenpulse-ai.vercel.app/


### Key Features:
- Real-time price tracking for major DeFi tokens (AAVE, Uniswap, Compound, Maker)
- AI-driven price predictions for multiple time horizons:
  - 1-hour forecasts
  - 6-hour forecasts
  - 12-hour forecasts
  - 24-hour forecasts
- Market sentiment analysis using LLaMA AI
- Interactive price charts with Chart.js
- Detailed prediction breakdowns with percentage changes
- Real-time market sentiment indicators
- Responsive design with dynamic UI components

### Technical Stack:
- React.js
- Chart.js with react-chartjs-2
- Express.js backend with proxy middleware
- LLaMA AI Integration
- Tailwind CSS
- React Icons
- Axios for API handling
- HTTP Proxy Middleware

The application combines traditional price tracking with advanced AI capabilities to provide users with comprehensive DeFi token analysis. It features an intuitive interface that displays both technical data and AI-generated insights, making complex market data accessible to users.

This project showcases the integration of AI technology with financial data analysis, demonstrating expertise in both frontend development and AI API implementation.

# TokenTap: Web3 Token Faucet Interface

A React-based web application that provides a user-friendly interface for interacting with an Ethereum token faucet smart contract, allowing users to request and manage test tokens on the blockchain.


##GITHUB:https://github.com/manish2889/tokentap
##LIVELINK:https://tokentap.vercel.app/


### Key Features:
- MetaMask wallet integration
- Real-time token balance tracking
- Smart contract interaction using ethers.js
- Automated cooldown system
- Contract balance monitoring
- Network validation
- Error handling and user feedback
- Transaction status tracking
- Time-based request limitations
- Responsive UI with gradient design

### Technical Stack:
- React 18
- Ethers.js v6
- MetaMask Integration
- Smart Contract Integration
- CSS Gradients and Animations
- Error Boundary Implementation
- Network Detection
- Contract State Management
- Asynchronous Transaction Handling

The application serves as a bridge between users and blockchain-based token distribution systems, featuring a modern interface with real-time updates and comprehensive error handling. It demonstrates the implementation of Web3 functionality in a user-friendly format.

This project showcases expertise in blockchain integration, frontend development, and Web3 technologies while maintaining a focus on user experience and reliability.




